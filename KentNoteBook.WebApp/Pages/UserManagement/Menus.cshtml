@page
@model KentNoteBook.WebApp.Pages.UserManagement.MenusModel
@{
	ViewData["Title"] = "Menus";

	Layout = null;
}

<!--- Breadcrumbs -->
<ol class="breadcrumb">
	<li class="breadcrumb-item">
		<a href="#" ajax-link="true" data-url="/dashboard" data-update-panel=".main-container">Dashboard</a>
	</li>
	<li class="breadcrumb-item">
		<a href="#" ajax-link="true" data-url="/UserManagement/Users" data-update-panel=".main-container">User Management</a>
	</li>
	<li class="breadcrumb-item active">Menus</li>
</ol>

<form method="post">
	<div id="alert_panel"></div>
	<div class="form-group row">
		<button type="button" class="btn btn-primary btn-sm ml-3 mr-1" data-toggle="modal" data-target="#modal_dialog_layout" data-modal-title="Add Menu" data-modal-url="/UserManagement/Dialog/MenuEdit" data-modal-size="lg"><i class="fa fa-fw fa-plus mr-1"></i>Add</button>
		<button type='button' class='btn btn-danger btn-sm mr-1' data-toggle='modal' data-target='#modal_confirm_layout' data-url='/UserManagement/Menus?handler=Remove' data-alert-panel='#alert_panel' data-update-panel='#tbMenus'><i class='fa fa-fw fa-remove mr-1'></i>Remove All</button>
	</div>

	<div class="card" id="menuContainer">

	</div>

</form>

<script type="text/javascript">

	$(".list-group .collapse-icon").click(function () {

		$(this).siblings(".list-group").toggleClass("d-none").toggleClass("d-block");
		$(this).find("i.fa").toggleClass("fa-plus").toggleClass("fa-minus");

		if ($(this).siblings(".list-group").length && $(this).find("i.fa").hasClass("fa-plus")) {
			$(this).parent().removeClass("pb-0");
		} else {
			$(this).parent().addClass("pb-0");
		}
	});

	// check all
	$(".list-group .custom-checkbox").click(function () {
		var state = $(this).find(":checkbox").prop("checked");

		// set the state of sub-checkboxes
		$(this).siblings(".list-group").find(":checkbox").prop("checked", state);

		// existing less than one sub-checkbox that is unchecked
		if (!state) {
			var $self = $(this);
			var parentCheckBox = $self.parent().parent().siblings(".custom-checkbox");

			while (parentCheckBox.length) {
				parentCheckBox.find(":checkbox").prop("checked", false);

				$self = parentCheckBox;
				parentCheckBox = $self.parent().parent().siblings(".custom-checkbox");
			}
		}

		// all sub-checkeboxes are checked
		var isAllChecked = true;
		$(this).parent().parent().find(":checkbox").each(function () {
			if (!$(this).prop("checked")) {
				isAllChecked = false;
				return;
			}
		});
		if (isAllChecked) {

			var $self = $(this);
			var parentCheckBox = $self.parent().parent().siblings(".custom-checkbox");

			while (parentCheckBox.length) {
				parentCheckBox.find(":checkbox").prop("checked", true);

				$self = parentCheckBox;
				parentCheckBox = $self.parent().parent().siblings(".custom-checkbox");
			}
		}
	});
</script>


